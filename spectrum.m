%This script is used to compute the power of all frequency of movement of
%the user in the frequency domain
%This makes it possible to compare graphically the different datasets and
%find out if the user has completed a walking session or a running session
%by filtering out lower frequencies of acceleration.
%In the future, it will be possible to analyze directly the datasets using
%a single function which gives as an output the type of activity conducted.
%1) Run the hackaton23.mlx file to get the datasets
%2) Run this file to display the results

% Compute power spectrum

% Generated by MATLAB(R) 9.9 and Signal Processing Toolbox 8.5.
% Generated on: 13-May-2023 16:06:34

% Parameters
frequencyLimits = [0 1]*pi; % Normalized frequency (rad/sample)

%%
% Index into signal time region of interest
timeLimits = [1 1196]; % samples
acc_run_ROI = acc_run(:);
acc_run_ROI = acc_run_ROI(timeLimits(1):timeLimits(2));

% Compute spectral estimate
% Run the function call below without output arguments to plot the results
[Pacc_run_ROI, Facc_run_ROI] = pspectrum(acc_run_ROI, ...
    'FrequencyLimits',frequencyLimits);
pspectrum(acc_run_ROI, 'FrequencyLimits',frequencyLimits);
hold on;

%% WALK
% Index into signal time region of interest
timeLimits = [1 1196]; % samples
acc_walk_ROI = acc_walk(:);
acc_walk_ROI = acc_walk_ROI(timeLimits(1):timeLimits(2));

% Compute spectral estimate
% Run the function call below without output arguments to plot the results
[Pacc_walk_ROI, Facc_walk_ROI] = pspectrum(acc_walk_ROI, ...
    'FrequencyLimits',frequencyLimits);
pspectrum(acc_walk_ROI,'FrequencyLimits',frequencyLimits);


%% RUN
% Index into signal time region of interest
timeLimits = [1 1196]; % samples
acc_run_ROI = acc_run(:);
acc_run_ROI = acc_run_ROI(timeLimits(1):timeLimits(2));

% Compute spectral estimate
% Run the function call below without output arguments to plot the results
[Pacc_run_ROI, Facc_run_ROI] = pspectrum(acc_run_ROI, ...
    'FrequencyLimits',frequencyLimits);
pspectrum(acc_run_ROI, 'FrequencyLimits',frequencyLimits);
hold on;

%% SIGNAL
% Index into signal time region of interest
timeLimits = [1 1196]; % samples
acc_signal_ROI = acc_signal(:);
acc_signal_ROI = acc_signal_ROI(timeLimits(1):timeLimits(2));

% Compute spectral estimate
% Run the function call below without output arguments to plot the results
[Pacc_signal_ROI, Facc_signal_ROI] = pspectrum(acc_run_ROI, ...
    'FrequencyLimits',frequencyLimits);
pspectrum(acc_signal_ROI, 'FrequencyLimits',frequencyLimits);
legend("Walk", "Run", "Signal")

%% FILTER
hold off;
figure;
Filtered_Walk = highpass(acc_walk_ROI,0.8);
pspectrum(Filtered_Walk,'FrequencyLimits',frequencyLimits);
hold on;
Filtered_Run = highpass(acc_run_ROI,0.8);
pspectrum(Filtered_Run,'FrequencyLimits',frequencyLimits);
Filtered_signal = highpass(acc_signal_ROI,0.8);
pspectrum(Filtered_signal,'FrequencyLimits',frequencyLimits);
legend("Walk", "Run", "Signal")





